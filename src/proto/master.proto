syntax = "proto3";

package master;

service MasterService {
    // Worker call Barrier -> Master when 
    //      1. Done preparing 1st Round and propose to begin the computing
    //      2. Done Computing Round X & has pushed all updated parameters to other workers
    //      3. Recover from a failure with computed Round X
    // Master replies to all workers when all of them has done Round X and called Barrier
    rpc Barrier (BarrierRequest) returns (BarrierReply) {}
}

message BarrierRequest {
    // the worker who is calling for barrier
    string WorkerAddr = 1;

    // the Barrier Round Number they are syncing
    uint64 RoundNo = 2;    

    // if the corresponding part of Graph Parameter has converged 
    bool Converge = 3;
}

message BarrierReply {
    enum BarrierStatus {
        OK = 0;
        ERROR = 1;
    }
    BarrierStatus status = 1;

    // if all the Graph Parameter has converged
    bool Done = 2;
}

